[{"C:\\Users\\Eng_hack\\Desktop\\projects\\sql2\\src\\App.js":"1","C:\\Users\\Eng_hack\\Desktop\\projects\\sql2\\src\\component\\Table.js":"2","C:\\Users\\Eng_hack\\Desktop\\projects\\sql2\\src\\component\\Fields.js":"3","C:\\Users\\Eng_hack\\Desktop\\projects\\sql2\\src\\reportWebVitals.js":"4"},{"size":199,"mtime":1611241506492,"results":"5","hashOfConfig":"6"},{"size":2614,"mtime":1611333221619,"results":"7","hashOfConfig":"6"},{"size":2180,"mtime":1611257646725,"results":"8","hashOfConfig":"6"},{"size":362,"mtime":1609615413860,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"179s5gh",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Eng_hack\\Desktop\\projects\\sql2\\src\\App.js",["20"],"C:\\Users\\Eng_hack\\Desktop\\projects\\sql2\\src\\component\\Table.js",["21"],"import React,{useState} from 'react'\r\nimport Fields from './Fields'\r\n\r\n\r\nfunction Table() {\r\n    const emptyRow = {id:Math.floor(Math.random() * 999 )+1,name:\"\",data_type : \"\" ,null_value:false,primary:false}\r\n    const [table,setTable] = useState([])\r\n    const [rerendering, setrerendering] = useState('')\r\n    const [tableName, settableName] = useState('Table_name')\r\n\r\n    const updateRow  =(row) => {\r\n        const tables = [ ...table]\r\n        var index = tables.findIndex( r => r.id === row.id )\r\n        tables[index] = row\r\n        console.log('index',index,'row',row,'tables',tables);\r\n        setTable(tables)\r\n    }\r\n\r\n    const deleteRow = (row) => {\r\n        const tabels = [ ...table]\r\n        const newTable = tabels.filter(r => r.id !== row.id )\r\n        setTable(newTable)\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n\r\n        var sgr = `create table ${tableName} (`;\r\n        for (let index = 0; index < table.length; index++) {\r\n          sgr +=\r\n            table[index].name + \"  \" + table[index].data_type+ ' ' ;\r\n            if(table[index].primary){\r\n                sgr +=' PRIMARY KEY ,'\r\n            }else if(table[index].null_value)\r\n           {sgr += 'NOT NULL' + ' ,\\n'}else{sgr += ' ,\\n'}\r\n        }\r\n        sgr += \");\";\r\n        console.log(\"effect work\", sgr);\r\n        \r\n\r\n\r\n        setrerendering(sgr)\r\n    },[table,tableName])\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"tn\" > enter table name : \r\n            </label>\r\n            <input name=\"tn\" value={tableName} onChange={(e) => settableName(e.target.value)} />\r\n\r\n            <table className=\"table  table-striped \" >\r\n                <thead>\r\n                  <tr>\r\n                  <th scope=\"row1\" >id</th>\r\n                    <th scope=\"row1\" >name</th>\r\n                    <th scope=\"row1\" >data-type</th>\r\n                    <th scope=\"row1\" >primary-key</th>\r\n                    <th scope=\"row1\" >Not Null</th>\r\n                    <th scope=\"row1\" >Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                   \r\n                   {table.map((row,index) => <tr  key={row.id} ><Fields key={row.id} delete={deleteRow} updateRow={updateRow} row={row} >{row.name}</Fields></tr> )}\r\n                   \r\n                   <tr><td><button className=\"btn btn-primary\" onClick={()=>{setTable([ ...table,emptyRow])}} >new row</button></td></tr>\r\n\r\n                </tbody>\r\n            </table>     \r\n            <div style={{height : 'maxContent'}} >\r\n                {rerendering}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","C:\\Users\\Eng_hack\\Desktop\\projects\\sql2\\src\\component\\Fields.js",["22","23","24","25"],"import React, { useState, useContext } from \"react\";\r\n\r\nconst dataTypes = [\r\n  \"bit\",\r\n  \"int\",\r\n  \"float\",\r\n  \"Date\",\r\n  \"Time\",\r\n  \"Datetime\",\r\n  \"Timestamp\",\r\n  \"Year\",\r\n  \"Char\",\r\n  \"Varchar\",\r\n  \"Varchar()\",\r\n  \"bit\",\r\n  \"Binary\",\r\n];\r\n\r\nfunction Fields(props) {\r\n  const { updateRow, row } = props;\r\n  const [name, setName] = useState(row.name);\r\n  const [data_type, setdata_type] = useState(row.data_type);\r\n  const [null_value, setnull_value] = useState(row.null_value);\r\n  const [primary, setprimary] = useState(row.primary);\r\n  const [reload, setreload] = useState('')\r\n \r\n  React.useEffect(()=>{\r\n       if(primary){\r\n           setnull_value(false)\r\n       }\r\n  },[null_value])\r\n  React.useEffect(() => {\r\n    if (primary) {\r\n      setnull_value(false);\r\n    }\r\n  }, [primary]);\r\n\r\n  const submitR = () => {\r\n    var newR = {\r\n      id: row.id,\r\n      name: name,\r\n      data_type: data_type,\r\n      null_value: null_value,\r\n      primary: primary,\r\n    };\r\n    updateRow(newR);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <td>{row.id}</td>\r\n      <td>\r\n        <input\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n          value={name}\r\n          placeholder=\"row name\"\r\n        />\r\n      </td>\r\n      <td>\r\n        {\" \"}\r\n        <select\r\n          onChange={(e) => {\r\n            setdata_type(e.target.value);\r\n          }}\r\n          value={data_type}\r\n        >\r\n          {dataTypes.map((t, index) => (\r\n            <option key={index}>{t}</option>\r\n          ))}\r\n        </select>{\" \"}\r\n      </td>\r\n      <td>\r\n        {\" \"}\r\n        <input\r\n        defaultChecked={primary}\r\n          type=\"checkbox\"\r\n          value={primary}\r\n          onChange={() => setprimary(!primary)}\r\n        />{\" \"}\r\n      </td>\r\n      <td>\r\n        <input\r\n        checked={null_value}\r\n          onChange={() => {\r\n            setnull_value(!null_value);\r\n          }}\r\n          value={null_value}\r\n          type=\"checkbox\"\r\n        />\r\n      </td>\r\n      <td>\r\n        <button onClick={submitR} className=\"btn btn-primary m-2\">\r\n          add\r\n        </button>\r\n      </td>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Fields;\r\n","C:\\Users\\Eng_hack\\Desktop\\projects\\sql2\\src\\reportWebVitals.js",[],{"ruleId":"26","severity":1,"message":"27","line":1,"column":8,"nodeType":"28","messageId":"29","endLine":1,"endColumn":12},{"ruleId":"30","severity":1,"message":"31","line":34,"column":31,"nodeType":"32","messageId":"33","endLine":34,"endColumn":32},{"ruleId":"26","severity":1,"message":"34","line":1,"column":27,"nodeType":"28","messageId":"29","endLine":1,"endColumn":37},{"ruleId":"26","severity":1,"message":"35","line":25,"column":10,"nodeType":"28","messageId":"29","endLine":25,"endColumn":16},{"ruleId":"26","severity":1,"message":"36","line":25,"column":18,"nodeType":"28","messageId":"29","endLine":25,"endColumn":27},{"ruleId":"37","severity":1,"message":"38","line":31,"column":5,"nodeType":"39","endLine":31,"endColumn":17,"suggestions":"40"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useContext' is defined but never used.","'reload' is assigned a value but never used.","'setreload' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'primary'. Either include it or remove the dependency array.","ArrayExpression",["41"],{"desc":"42","fix":"43"},"Update the dependencies array to be: [null_value, primary]",{"range":"44","text":"45"},[676,688],"[null_value, primary]"]