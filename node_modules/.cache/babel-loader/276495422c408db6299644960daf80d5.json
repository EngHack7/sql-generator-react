{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Eng_hack\\\\Desktop\\\\projects\\\\sql2\\\\src\\\\component\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Fields from './Fields';\n\nfunction Table() {\n  _s();\n\n  const emptyRow = {\n    id: Math.floor(Math.random() * 999) + 1,\n    name: \"\",\n    data_type: \"\",\n    null_value: false,\n    primary: false\n  };\n  const [table, setTable] = useState([]);\n  const [rerendering, setrerendering] = useState('');\n  const [tableName, settableName] = useState('Table_name');\n\n  const updateRow = row => {\n    const tables = [...table];\n    var index = tables.findIndex(r => r.id === row.id);\n    tables[index] = row;\n    console.log('index', index, 'row', row, 'tables', tables);\n    setTable(tables);\n  };\n\n  const deleteRow = row => {\n    const tabels = [...table];\n    const newTable = tabels.filter(r => r.id !== row.id);\n    setTable(newTable);\n  };\n\n  React.useEffect(() => {\n    var sgr = `create table ${tableName} (`;\n\n    for (let index = 0; index < table.length; index++) {\n      sgr += table[index].name + \"  \" + table[index].data_type + ' ';\n\n      if (table[index].primary) {\n        sgr += ' PRIMARY KEY ,';\n      } else if (table[index].null_value) {\n        sgr += table[index].null_value + ' ,\\n';\n      } else {\n        sgr += ' ,\\n';\n      }\n    }\n\n    sgr += \");\";\n    console.log(\"effect work\", sgr);\n    setrerendering(sgr);\n  }, [table, tableName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"tn\",\n      children: \" enter table name :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"tn\",\n      value: tableName,\n      onChange: e => settableName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table  table-striped \",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row1\",\n            children: \"id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row1\",\n            children: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row1\",\n            children: \"data-type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row1\",\n            children: \"primary-key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row1\",\n            children: \"Not Null\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [table.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(Fields, {\n            delete: deleteRow,\n            updateRow: updateRow,\n            row: row,\n            children: row.name\n          }, row.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 65\n          }, this)\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 46\n        }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => {\n                setTable([...table, emptyRow]);\n              },\n              children: \"new row\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 'maxContent'\n      },\n      children: rerendering\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Table, \"z2MKGHTUsZXyiEoEZCqXI77j6NM=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/Eng_hack/Desktop/projects/sql2/src/component/Table.js"],"names":["React","useState","Fields","Table","emptyRow","id","Math","floor","random","name","data_type","null_value","primary","table","setTable","rerendering","setrerendering","tableName","settableName","updateRow","row","tables","index","findIndex","r","console","log","deleteRow","tabels","newTable","filter","useEffect","sgr","length","e","target","value","map","height"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport Fields from './Fields'\r\n\r\n\r\nfunction Table() {\r\n    const emptyRow = {id:Math.floor(Math.random() * 999 )+1,name:\"\",data_type : \"\" ,null_value:false,primary:false}\r\n    const [table,setTable] = useState([])\r\n    const [rerendering, setrerendering] = useState('')\r\n    const [tableName, settableName] = useState('Table_name')\r\n\r\n    const updateRow  =(row) => {\r\n        const tables = [ ...table]\r\n        var index = tables.findIndex( r => r.id === row.id )\r\n        tables[index] = row\r\n        console.log('index',index,'row',row,'tables',tables);\r\n        setTable(tables)\r\n    }\r\n\r\n    const deleteRow = (row) => {\r\n        const tabels = [ ...table]\r\n        const newTable = tabels.filter(r => r.id !== row.id )\r\n        setTable(newTable)\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n\r\n        var sgr = `create table ${tableName} (`;\r\n        for (let index = 0; index < table.length; index++) {\r\n          sgr +=\r\n            table[index].name + \"  \" + table[index].data_type+ ' ' ;\r\n            if(table[index].primary){\r\n                sgr +=' PRIMARY KEY ,'\r\n            }else if(table[index].null_value)\r\n           {sgr += table[index].null_value + ' ,\\n'}else{sgr += ' ,\\n'}\r\n        }\r\n        sgr += \");\";\r\n        console.log(\"effect work\", sgr);\r\n        \r\n\r\n\r\n        setrerendering(sgr)\r\n    },[table,tableName])\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"tn\" > enter table name : \r\n            </label>\r\n            <input name=\"tn\" value={tableName} onChange={(e) => settableName(e.target.value)} />\r\n\r\n            <table className=\"table  table-striped \" >\r\n                <thead>\r\n                  <tr>\r\n                  <th scope=\"row1\" >id</th>\r\n                    <th scope=\"row1\" >name</th>\r\n                    <th scope=\"row1\" >data-type</th>\r\n                    <th scope=\"row1\" >primary-key</th>\r\n                    <th scope=\"row1\" >Not Null</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                   \r\n                   {table.map((row,index) => <tr  key={row.id} ><Fields key={row.id} delete={deleteRow} updateRow={updateRow} row={row} >{row.name}</Fields></tr> )}\r\n                   \r\n                   <tr><td><button className=\"btn btn-primary\" onClick={()=>{setTable([ ...table,emptyRow])}} >new row</button></td></tr>\r\n\r\n                </tbody>\r\n            </table>     \r\n            <div style={{height : 'maxContent'}} >\r\n                {rerendering}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n"]},"metadata":{},"sourceType":"module"}