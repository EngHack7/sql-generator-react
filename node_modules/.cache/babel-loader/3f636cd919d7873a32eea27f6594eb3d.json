{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Eng_hack\\\\Desktop\\\\projects\\\\sql2\\\\src\\\\component\\\\Fields.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nconst dataTypes = [\"bit\", \"int\", \"float\", \"Date\", \"Time\", \"Datetime\", \"Timestamp\", \"Year\", \"Char\", \"Varchar\", \"Varchar()\", \"bit\", \"Binary\"];\n\nfunction Fields(props) {\n  _s();\n\n  const {\n    updateRow,\n    row\n  } = props;\n  const [name, setName] = useState(row.name);\n  const [data_type, setdata_type] = useState(row.data_type);\n  const [null_value, setnull_value] = useState(row.null_value);\n  const [primary, setprimary] = useState(row.primary);\n  React.useEffect(() => {\n    if (null_value) {\n      setnull_value(false);\n    } else {}\n  }, [primary]);\n\n  const submitR = () => {\n    var newR = {\n      id: row.id,\n      name: name,\n      data_type: data_type,\n      null_value: null_value,\n      primary: primary\n    };\n    updateRow(newR);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: row.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          setName(e.target.value);\n        },\n        value: name,\n        placeholder: \"row name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          setdata_type(e.target.value);\n        },\n        value: data_type,\n        children: dataTypes.map((t, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: t\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 44\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: primary,\n        onChange: () => setprimary(!primary)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: () => {\n          setnull_value(!null_value);\n        },\n        value: null_value,\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitR,\n        className: \"btn btn-primary m-2\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Fields, \"xYtLwaGK2MXnla4Xs7+kjmPXtL0=\");\n\n_c = Fields;\nexport default Fields;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fields\");","map":{"version":3,"sources":["C:/Users/Eng_hack/Desktop/projects/sql2/src/component/Fields.js"],"names":["React","useState","useContext","dataTypes","Fields","props","updateRow","row","name","setName","data_type","setdata_type","null_value","setnull_value","primary","setprimary","useEffect","submitR","newR","id","e","target","value","map","t","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,UAAvB,QAAwC,OAAxC;AAEA,MAAMC,SAAS,GAAG,CACd,KADc,EAEd,KAFc,EAGd,OAHc,EAId,MAJc,EAKd,MALc,EAMd,UANc,EAOd,WAPc,EAQd,MARc,EASd,MATc,EAUd,SAVc,EAWd,WAXc,EAYd,KAZc,EAad,QAbc,CAAlB;;AAgBA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAEnB,QAAM;AAACC,IAAAA,SAAD;AAAWC,IAAAA;AAAX,MAAkBF,KAAxB;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACM,GAAG,CAACC,IAAL,CAAhC;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAACM,GAAG,CAACG,SAAL,CAA1C;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAACM,GAAG,CAACK,UAAL,CAA5C;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAACM,GAAG,CAACO,OAAL,CAAtC;AAEAd,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAI;AAChB,QAAGJ,UAAH,EACA;AAEIC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAJD,MAIK,CAEJ;AACJ,GARD,EAQE,CAACC,OAAD,CARF;;AAUA,QAAMG,OAAO,GAAG,MAAM;AAElB,QAAIC,IAAI,GAAG;AACPC,MAAAA,EAAE,EAAEZ,GAAG,CAACY,EADD;AACKX,MAAAA,IAAI,EAAEA,IADX;AACiBE,MAAAA,SAAS,EAAEA,SAD5B;AACuCE,MAAAA,UAAU,EAAEA,UADnD;AAC8DE,MAAAA,OAAO,EAAGA;AADxE,KAAX;AAGAR,IAAAA,SAAS,CAACY,IAAD,CAAT;AACH,GAND;;AAOA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAA,gBAAKX,GAAG,CAACY;AAAT;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BAAI;AAAO,QAAA,QAAQ,EAAGC,CAAD,IAAK;AAACX,UAAAA,OAAO,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AAAwB,SAA/C;AAAiD,QAAA,KAAK,EAAEd,IAAxD;AAA8D,QAAA,WAAW,EAAC;AAA1E;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,mCAAK;AAAS,QAAA,QAAQ,EAAGY,CAAD,IAAK;AAACT,UAAAA,YAAY,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAA6B,SAAtD;AAAwD,QAAA,KAAK,EAAEZ,SAA/D;AAAA,kBACDP,SAAS,CAACoB,GAAV,CAAc,CAACC,CAAD,EAAGC,KAAH,kBAAa;AAAA,oBAAsBD;AAAtB,WAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,gBAA3B;AADC;AAAA;AAAA;AAAA;AAAA,cAAL;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAMI;AAAA,mCAAK;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,EAAEX,OAA9B;AAAuC,QAAA,QAAQ,EAAE,MAAMC,UAAU,CAAC,CAACD,OAAF;AAAjE;AAAA;AAAA;AAAA;AAAA,cAAL;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,6BAAI;AAAO,QAAA,QAAQ,EAAE,MAAI;AAACD,UAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AAA2B,SAAjD;AAAoD,QAAA,KAAK,EAAEA,UAA3D;AAAuE,QAAA,IAAI,EAAC;AAA5E;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAA,6BAAI;AAAQ,QAAA,OAAO,EAAEK,OAAjB;AAA0B,QAAA,SAAS,EAAC,qBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAxCQb,M;;KAAAA,M;AA0CT,eAAeA,MAAf","sourcesContent":["import React,{useState,useContext} from 'react'\r\n\r\nconst dataTypes = [\r\n    \"bit\",\r\n    \"int\",\r\n    \"float\",\r\n    \"Date\",\r\n    \"Time\",\r\n    \"Datetime\",\r\n    \"Timestamp\",\r\n    \"Year\",\r\n    \"Char\",\r\n    \"Varchar\",\r\n    \"Varchar()\",\r\n    \"bit\",\r\n    \"Binary\",\r\n  ];\r\n\r\nfunction Fields(props) {\r\n\r\n    const {updateRow,row} = props\r\n    const [name, setName] = useState(row.name)\r\n    const [data_type, setdata_type] = useState(row.data_type)\r\n    const [null_value, setnull_value] = useState(row.null_value)\r\n    const [primary, setprimary] = useState(row.primary)\r\n\r\n    React.useEffect(()=>{\r\n        if(null_value)\r\n        {\r\n            \r\n            setnull_value(false)\r\n        }else{\r\n            \r\n        }\r\n    },[primary])\r\n\r\n    const submitR = () => {\r\n        \r\n        var newR = {\r\n            id: row.id, name: name, data_type: data_type, null_value: null_value,primary : primary\r\n        }\r\n        updateRow(newR)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <td>{row.id}</td>\r\n            <td><input onChange={(e)=>{setName(e.target.value)}} value={name} placeholder=\"row name\" /></td>\r\n            <td> <select  onChange={(e)=>{setdata_type(e.target.value)}} value={data_type} >\r\n               {dataTypes.map((t,index) => <option key={index} >{t}</option>)}    \r\n            </select> </td>\r\n            <td> <input type=\"checkbox\" value={primary} onChange={() => setprimary(!primary)} /> </td>\r\n            <td><input onChange={()=>{setnull_value(!null_value)}}  value={null_value} type=\"checkbox\" /></td>\r\n            <td><button onClick={submitR} className=\"btn btn-primary m-2\" >add</button></td>\r\n\r\n        </React.Fragment>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Fields\r\n"]},"metadata":{},"sourceType":"module"}