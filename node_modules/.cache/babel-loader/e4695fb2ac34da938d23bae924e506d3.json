{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Eng_hack\\\\Desktop\\\\projects\\\\sql2\\\\src\\\\component\\\\Fields.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nconst dataTypes = [\"bit\", \"int\", \"float\", \"Date\", \"Time\", \"Datetime\", \"Timestamp\", \"Year\", \"Char\", \"Varchar\", \"Varchar()\", \"bit\", \"Binary\"];\n\nfunction Fields(props) {\n  _s();\n\n  const {\n    updateRow,\n    row\n  } = props;\n  const [name, setName] = useState(row.name);\n  const [data_type, setdata_type] = useState(row.data_type);\n  const [null_value, setnull_value] = useState(row.null_value);\n  const [primary, setprimary] = useState(row.primary);\n  const [reload, setreload] = useState('');\n  React.useEffect(() => {\n    setreload('');\n  }, [null_value]);\n  React.useEffect(() => {\n    if (primary) {\n      setnull_value(false);\n    }\n  }, [primary]);\n\n  const submitR = () => {\n    var newR = {\n      id: row.id,\n      name: name,\n      data_type: data_type,\n      null_value: null_value,\n      primary: primary\n    };\n    updateRow(newR);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: row.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          setName(e.target.value);\n        },\n        value: name,\n        placeholder: \"row name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          setdata_type(e.target.value);\n        },\n        value: data_type,\n        children: dataTypes.map((t, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: t\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        defaultChecked: primary,\n        type: \"checkbox\",\n        value: primary,\n        onChange: () => setprimary(!primary)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: () => {\n          setnull_value(!null_value);\n        },\n        value: null_value,\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitR,\n        className: \"btn btn-primary m-2\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Fields, \"pGRELjJ4RK46fVlGImlSLp5ggfk=\");\n\n_c = Fields;\nexport default Fields;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fields\");","map":{"version":3,"sources":["C:/Users/Eng_hack/Desktop/projects/sql2/src/component/Fields.js"],"names":["React","useState","useContext","dataTypes","Fields","props","updateRow","row","name","setName","data_type","setdata_type","null_value","setnull_value","primary","setprimary","reload","setreload","useEffect","submitR","newR","id","e","target","value","map","t","index"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\n\r\nconst dataTypes = [\r\n  \"bit\",\r\n  \"int\",\r\n  \"float\",\r\n  \"Date\",\r\n  \"Time\",\r\n  \"Datetime\",\r\n  \"Timestamp\",\r\n  \"Year\",\r\n  \"Char\",\r\n  \"Varchar\",\r\n  \"Varchar()\",\r\n  \"bit\",\r\n  \"Binary\",\r\n];\r\n\r\nfunction Fields(props) {\r\n  const { updateRow, row } = props;\r\n  const [name, setName] = useState(row.name);\r\n  const [data_type, setdata_type] = useState(row.data_type);\r\n  const [null_value, setnull_value] = useState(row.null_value);\r\n  const [primary, setprimary] = useState(row.primary);\r\n  const [reload, setreload] = useState('')\r\n \r\n  React.useEffect(()=>{\r\n        setreload('')\r\n  },[null_value])\r\n  React.useEffect(() => {\r\n    if (primary) {\r\n      setnull_value(false);\r\n    }\r\n  }, [primary]);\r\n\r\n  const submitR = () => {\r\n    var newR = {\r\n      id: row.id,\r\n      name: name,\r\n      data_type: data_type,\r\n      null_value: null_value,\r\n      primary: primary,\r\n    };\r\n    updateRow(newR);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <td>{row.id}</td>\r\n      <td>\r\n        <input\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n          value={name}\r\n          placeholder=\"row name\"\r\n        />\r\n      </td>\r\n      <td>\r\n        {\" \"}\r\n        <select\r\n          onChange={(e) => {\r\n            setdata_type(e.target.value);\r\n          }}\r\n          value={data_type}\r\n        >\r\n          {dataTypes.map((t, index) => (\r\n            <option key={index}>{t}</option>\r\n          ))}\r\n        </select>{\" \"}\r\n      </td>\r\n      <td>\r\n        {\" \"}\r\n        <input\r\n        defaultChecked={primary}\r\n          type=\"checkbox\"\r\n          value={primary}\r\n          onChange={() => setprimary(!primary)}\r\n        />{\" \"}\r\n      </td>\r\n      <td>\r\n        <input\r\n          onChange={() => {\r\n            setnull_value(!null_value);\r\n          }}\r\n          value={null_value}\r\n          type=\"checkbox\"\r\n        />\r\n      </td>\r\n      <td>\r\n        <button onClick={submitR} className=\"btn btn-primary m-2\">\r\n          add\r\n        </button>\r\n      </td>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Fields;\r\n"]},"metadata":{},"sourceType":"module"}